{"version":3,"sources":["components/ColorBox.js","components/NavBar.js","components/Footer.js","components/Palette.js","components/MiniPalette.js","components/PaletteList.js","components/SingleColorPalette.js","components/DraggableColorBox.js","components/DraggableColorList.js","components/NewPaletteFormStyles.js","components/NewPalettePopup.js","components/NewPaletteEmojiPicker.js","components/NewPaletteNav.js","components/NewPaletteDrawer.js","components/NewPaletteForm.js","seedColors.js","colorHelpers.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","state","isCopied","handleCopy","setState","setTimeout","this","props","name","color","paletteId","id","showLink","height","overlayClasses","messageClasses","text","onCopy","className","style","backgroundColor","to","onClick","e","stopPropagation","Component","NavBar","showSnackBar","changeFormat","event","handleChangeFormat","target","value","handleClose","level","handleChangeLevel","format","showSlider","role","aria-label","defaultValue","min","max","step","onAfterChange","FormControl","InputLabel","Select","labelId","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","toUpperCase","IconButton","Footer","palette","emoji","Palette","paletteName","colorBoxes","colors","map","key","MiniPalette","deletePalette","useState","popupOpen","setPopupOpen","closePopup","handleClick","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","PaletteList","goToPalette","history","push","newPalettes","palettes","filter","updatePalettes","title","SingleColorPalette","_shades","gatherShades","colorId","shades","shade","concat","slice","SortableElement","deleteColor","SortableContainer","index","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","lineHeight","contentShift","NewPalettePopup","handlePaletteNameChange","openEmojiPicker","onSubmit","label","validators","errorMessages","NewPaletteEmojiPicker","show","savePalette","close","set","data","onSelect","native","NewPaletteNav","isDrawerOpen","handleDrawerOpen","handleSavePalette","itExists","useEffect","ValidatorForm","addValidationRule","find","toLowerCase","stringName","replace","classes","emojiPickerOpen","setEmojiPickerOpen","CssBaseline","AppBar","position","clsx","Toolbar","edge","Typography","noWrap","NewPaletteDrawer","handleDrawerClose","isPaletteFull","randomColor","handleChangeColor","handleAddColor","colorName","handleNameChange","clearPalette","Drawer","anchor","paper","Divider","disabled","type","NewPaletteForm","setIsDrawerOpen","setColor","defaultPalette","setColors","newName","setNewName","setPaletteName","length","newPalette","Math","floor","random","toString","hex","newColor","handleClearPalette","newColors","axis","onSortEnd","oldIndex","newIndex","arrayMove","distance","levels","generatePalette","starterPalette","hexColor","numberOfColors","scale","chroma","darken","getRange","mode","reverse","i","rgb","css","rgba","App","savedPalettes","JSON","parse","window","localStorage","getItem","seedColors","setPalettes","findPalette","some","setItem","stringify","exact","path","render","match","params","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a99c364.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./ColorBox.css\";\r\n\r\nexport default class ColorBox extends Component {\r\n  state = {\r\n    isCopied: false,\r\n  };\r\n\r\n  handleCopy = () => {\r\n    this.setState({ isCopied: true }, () => {\r\n      setTimeout(() => this.setState({ isCopied: false }), 1500);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, color, paletteId, id, showLink, height } = this.props;\r\n    const overlayClasses = `ColorBox-copy-overlay ${\r\n      this.state.isCopied ? \"active-overlay\" : \"\"\r\n    }`;\r\n    const messageClasses = `ColorBox-copy-message ${\r\n      this.state.isCopied ? \"active-message\" : \"\"\r\n    }`;\r\n\r\n    return (\r\n      <CopyToClipboard text={color} onCopy={this.handleCopy}>\r\n        <div\r\n          className=\"ColorBox\"\r\n          style={{ backgroundColor: color, height: height && height }}\r\n        >\r\n          {/* Overlay starts here... */}\r\n          <div style={{ backgroundColor: color }} className={overlayClasses} />\r\n          <div className={messageClasses}>\r\n            <h1>Copied!</h1>\r\n            <p>{color}</p>\r\n          </div>\r\n          {/* Overlay ends here. */}\r\n\r\n          <div className=\"ColorBox-copy-container\">\r\n            <div className=\"ColorBox-content\">\r\n              <span>{name}</span>\r\n            </div>\r\n            <button className=\"ColorBox-copy-btn\">Copy</button>\r\n          </div>\r\n\r\n          {showLink && (\r\n            <Link\r\n              to={`/palette/${paletteId}/${id}`}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <span className=\"ColorBox-more\">More</span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </CopyToClipboard>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Slider from \"rc-slider\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"./NavBar.css\";\r\n\r\nexport default class NavBar extends Component {\r\n  state = {\r\n    showSnackBar: false,\r\n  };\r\n\r\n  changeFormat = (event) => {\r\n    this.setState((state) => {\r\n      this.props.handleChangeFormat(event.target.value);\r\n      return {\r\n        showSnackBar: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ showSnackBar: false });\r\n  };\r\n\r\n  render() {\r\n    const { level, handleChangeLevel, format, showSlider } = this.props;\r\n    const { showSnackBar } = this.state;\r\n    return (\r\n      <header className=\"NavBar\">\r\n        <div className=\"NavBar-logo NavBar-item\">\r\n          <Link to=\"/\">\r\n            <span className=\"NavBar-logo-text\">←</span>\r\n            <span role=\"img\" aria-label=\"logo\">\r\n              🌑\r\n            </span>\r\n            <span className=\"NavBar-logo-text\">react colors</span>\r\n          </Link>\r\n        </div>\r\n        {showSlider ? (\r\n          <div className=\"NavBar-slider NavBar-item\">\r\n            <span>Level: {level}</span>\r\n            <div>\r\n              <Slider\r\n                defaultValue={level}\r\n                min={100}\r\n                max={900}\r\n                step={100}\r\n                onAfterChange={handleChangeLevel}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"NavBar-select NavBar-item\">\r\n          <FormControl>\r\n            <InputLabel id=\"encoding\">Encoding</InputLabel>\r\n            <Select\r\n              labelId=\"encoding\"\r\n              id=\"demo-simple-select\"\r\n              value={format}\r\n              onChange={this.changeFormat}\r\n            >\r\n              <MenuItem value=\"hex\">HEX #fffff</MenuItem>\r\n              <MenuItem value=\"rgb\">RGB (255, 255, 255)</MenuItem>\r\n              <MenuItem value=\"rgba\">RGBA (255, 255, 255, 1.0)</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            open={showSnackBar}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleClose}\r\n          >\r\n            <div className=\"NavBar-alert\">\r\n              <span className=\"NavBar-alert-text\">\r\n                Changed to: {format.toUpperCase()}\r\n              </span>\r\n              <div className=\"NavBar-alert-x\">\r\n                <IconButton\r\n                  onClick={this.handleClose}\r\n                  color=\"inherit\"\r\n                  aria-label=\"cancel\"\r\n                >\r\n                  <CancelIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </Snackbar>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"Footer\">\r\n        <span className=\"Footer-text\">\r\n          Palette: {this.props.palette} {this.props.emoji}\r\n        </span>\r\n        <span className=\"Footer-text\">Made with ❤ in 2020</span>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport ColorBox from \"./ColorBox\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Palette.css\";\r\n\r\nexport default class Palette extends Component {\r\n  state = {\r\n    level: 500,\r\n    format: \"hex\",\r\n  };\r\n\r\n  handleChangeLevel = (level) => {\r\n    this.setState({ level });\r\n  };\r\n\r\n  handleChangeFormat = (value) => {\r\n    this.setState({ format: value });\r\n  };\r\n\r\n  render() {\r\n    const { level, format } = this.state;\r\n    const { handleChangeLevel, handleChangeFormat } = this;\r\n    const { emoji, paletteName, id } = this.props.palette;\r\n\r\n    const colors = this.props.palette.colors[this.state.level];\r\n    const colorBoxes = colors.map((color) => (\r\n      <ColorBox\r\n        color={color[format]}\r\n        name={color.name}\r\n        key={color.id}\r\n        id={color.id}\r\n        paletteId={id}\r\n        showLink\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"Palette\">\r\n        <NavBar\r\n          format={format}\r\n          level={level}\r\n          handleChangeLevel={handleChangeLevel}\r\n          handleChangeFormat={handleChangeFormat}\r\n          showSlider\r\n        />\r\n        <div className=\"Palette-colors\">{colorBoxes}</div>\r\n        <Footer palette={paletteName} emoji={emoji} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport \"./MiniPalette.css\";\r\n\r\nexport default function MiniPalette(props) {\r\n  const { deletePalette } = props;\r\n\r\n  const colors = props.colors.map(({ color, name }) => {\r\n    return (\r\n      <div\r\n        className=\"MiniPalette-color\"\r\n        style={{ backgroundColor: color }}\r\n        key={name}\r\n      ></div>\r\n    );\r\n  });\r\n\r\n  const handleDeleteClick = (event) => {\r\n    event.stopPropagation();\r\n    deletePalette(props.id);\r\n  };\r\n\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const closePopup = (event) => {\r\n    event.stopPropagation();\r\n\r\n    setPopupOpen(false);\r\n  };\r\n  const openPopup = (event) => {\r\n    event.stopPropagation();\r\n\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"MiniPalette\" onClick={() => props.handleClick(props.id)}>\r\n      <Dialog\r\n        open={popupOpen}\r\n        onClose={closePopup}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Are you sure?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            This cannot be undone\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closePopup} variant=\"contained\" color=\"primary\">\r\n            I changed my mind\r\n          </Button>\r\n          <Button\r\n            onClick={handleDeleteClick}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Do it\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"MiniPalette-delete-icon\" onClick={openPopup}>\r\n        <Delete />\r\n      </div>\r\n      <div className=\"MiniPalette-colors\">{colors}</div>\r\n      <div className=\"MiniPalette-info\">\r\n        {props.paletteName} {props.emoji}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MiniPalette from \"./MiniPalette\";\r\n\r\nimport \"./PaletteList.css\";\r\n\r\nexport default class PaletteList extends Component {\r\n  goToPalette = (id) => {\r\n    this.props.history.push(`/palette/${id}`);\r\n  };\r\n\r\n  deletePalette = (paletteId) => {\r\n    const newPalettes = this.props.palettes.filter(\r\n      (palette) => palette.id !== paletteId\r\n    );\r\n    this.props.updatePalettes(newPalettes);\r\n  };\r\n\r\n  render() {\r\n    const palettes = this.props.palettes.map((palette) => {\r\n      return (\r\n        <div className=\"PaletteList-palette\" key={palette.id}>\r\n          <MiniPalette\r\n            handleClick={this.goToPalette}\r\n            title={palette.paletteName}\r\n            {...palette}\r\n            deletePalette={this.deletePalette}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"PaletteList\">\r\n        <nav className=\"PaletteList-header\">\r\n          <div>\r\n            <h1 className=\"PaletteList-title\">react colors</h1>\r\n          </div>\r\n          <Link to=\"/palette/new\" className=\"PaletteList-btn\">\r\n            Create palette\r\n          </Link>\r\n        </nav>\r\n        <div className=\"PaletteList-palettes\">{palettes}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ColorBox from \"./ColorBox\";\r\nimport Footer from \"./Footer\";\r\nimport NavBar from \"./NavBar\";\r\nimport \"./SingleColorPalette.css\";\r\n\r\nexport default class SingleColorPalette extends Component {\r\n  _shades = this.gatherShades(this.props.palette, this.props.colorId);\r\n\r\n  state = {\r\n    format: \"hex\",\r\n  };\r\n\r\n  handleChangeFormat = (value) => {\r\n    this.setState({ format: value });\r\n  };\r\n\r\n  gatherShades({ colors }, colorId) {\r\n    let shades = [];\r\n    for (const shade in colors) {\r\n      shades = shades.concat(\r\n        colors[shade].filter((color) => color.id === colorId)\r\n      );\r\n    }\r\n    return shades.slice(1);\r\n  }\r\n\r\n  render() {\r\n    const colorBoxes = this._shades.map((shade) => {\r\n      return (\r\n        <ColorBox\r\n          color={shade[this.state.format]}\r\n          name={shade.name}\r\n          key={shade.name}\r\n          showLink={false}\r\n          height=\"50%\"\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"SingleColorPalette\">\r\n        <NavBar\r\n          showSlider={false}\r\n          format={this.state.format}\r\n          handleChangeFormat={this.handleChangeFormat}\r\n        />\r\n        <div className=\"SingleColorPalette-boxes\">\r\n          {colorBoxes}\r\n          <div className=\"SingleColorPalette-go-back\">\r\n            <Link\r\n              to={`/palette/${this.props.palette.id}`}\r\n              className=\"SingleColorPalette-go-back-btn\"\r\n            >\r\n              Go back\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <Footer\r\n          palette={this.props.palette.paletteName}\r\n          emoji={this.props.palette.emoji}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { SortableElement } from \"react-sortable-hoc\";\r\n\r\nimport \"./DraggableColorBox.css\";\r\n\r\nfunction DraggableColorBox(props) {\r\n  const handleRemoveColor = (event) => {\r\n    props.deleteColor(props.color.name);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"DraggableColorBox\"\r\n      style={{ backgroundColor: props.color.color }}\r\n    >\r\n      <div className=\"DraggableColorBox-content\">\r\n        <span>{props.color.name}</span>\r\n        <IconButton\r\n          onClick={handleRemoveColor}\r\n          className=\"DraggableColorBox-icon\"\r\n          aria-label=\"delete\"\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortableElement(DraggableColorBox);\r\n","import React from \"react\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport DraggableColorBox from \"./DraggableColorBox\";\r\n\r\nfunction DraggableColorList({ colors, deleteColor }) {\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      {colors.map((color, index) => (\r\n        <DraggableColorBox\r\n          index={index}\r\n          color={color}\r\n          deleteColor={deleteColor}\r\n          key={color.name}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortableContainer(DraggableColorList);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    height: \"64px\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    height: \"calc(100vh - 64px)\",\r\n    flexGrow: 1,\r\n    padding: 0,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n    lineHeight: 0,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nexport default function NewPalettePopup(props) {\r\n  const {\r\n    popupOpen,\r\n    setPopupOpen,\r\n    paletteName,\r\n    handlePaletteNameChange,\r\n    openEmojiPicker,\r\n  } = props;\r\n\r\n  const handleClose = () => {\r\n    setPopupOpen(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    openEmojiPicker(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={popupOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Insert palette name</DialogTitle>\r\n        <DialogContent>\r\n          <ValidatorForm onSubmit={handleSubmit}>\r\n            <TextValidator\r\n              label=\"Palette name\"\r\n              value={paletteName}\r\n              onChange={handlePaletteNameChange}\r\n              validators={[\"required\", \"isUniqueName\"]}\r\n              errorMessages={[\r\n                \"Palettes need a name\",\r\n                \"That palette already exists\",\r\n              ]}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </ValidatorForm>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport data from \"emoji-mart/data/apple.json\";\r\nimport { NimblePicker } from \"emoji-mart\";\r\n\r\nexport default function NewPaletteEmojiPicker(props) {\r\n  const { show, savePalette, close } = props;\r\n\r\n  const handleClose = () => {\r\n    close(false);\r\n  };\r\n\r\n  const handleSelect = (emoji) => {\r\n    savePalette(emoji.native);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={show}\r\n    >\r\n      <NimblePicker set=\"apple\" data={data} onSelect={handleSelect} />\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nimport useStyles from \"./NewPaletteFormStyles\";\r\nimport NewPalettePopup from \"./NewPalettePopup\";\r\nimport NewPaletteEmojiPicker from \"./NewPaletteEmojiPicker\";\r\nimport \"./NewPaletteNav.css\";\r\n\r\nexport default function NewPaletteNav(props) {\r\n  const {\r\n    isDrawerOpen,\r\n    handleDrawerOpen,\r\n    handleSavePalette,\r\n    paletteName,\r\n    handlePaletteNameChange,\r\n    colors,\r\n    itExists,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const toId = (stringName) => stringName.toLowerCase().replace(/ /g, \"-\");\r\n\r\n    ValidatorForm.addValidationRule(\"isUnique\", (value) => {\r\n      const isUnique = colors.find(\r\n        (color) => color.name.toLowerCase() === value.toLowerCase()\r\n      );\r\n      if (!isUnique) return true;\r\n      return false;\r\n    });\r\n\r\n    ValidatorForm.addValidationRule(\"isUniqueName\", (value) => {\r\n      if (itExists(toId(value))) return false;\r\n      return true;\r\n    });\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const preSavePalette = () => {\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  const [emojiPickerOpen, setEmojiPickerOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"default\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <NewPalettePopup\r\n          popupOpen={popupOpen}\r\n          setPopupOpen={setPopupOpen}\r\n          savePalette={handleSavePalette}\r\n          handlePaletteNameChange={handlePaletteNameChange}\r\n          paletteName={paletteName}\r\n          openEmojiPicker={setEmojiPickerOpen}\r\n        />\r\n        <NewPaletteEmojiPicker\r\n          show={emojiPickerOpen}\r\n          close={setEmojiPickerOpen}\r\n          savePalette={handleSavePalette}\r\n        />\r\n        <Toolbar className=\"NewPaletteNav\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, isDrawerOpen && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Create palette\r\n          </Typography>\r\n          <div className=\"NewPaletteNav-form\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={preSavePalette}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Link to=\"/\">\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Go back\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport useStyles from \"./NewPaletteFormStyles\";\r\nimport \"./NewPaletteDrawer.css\";\r\n\r\nexport default function NewPaletteDrawer(props) {\r\n  const {\r\n    isDrawerOpen,\r\n    handleDrawerClose,\r\n    isPaletteFull,\r\n    randomColor,\r\n    color,\r\n    handleChangeColor,\r\n    handleAddColor,\r\n    colorName,\r\n    handleNameChange,\r\n    clearPalette,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={isDrawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"NewPaletteForm-drawer-content\">\r\n          <div className=\"NewPaletteForm-drawer-heading\">\r\n            <Typography variant=\"h4\">Design your palette</Typography>\r\n            <div className=\"m-4\">\r\n              <Button\r\n                className=\"m-4\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={clearPalette}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Button\r\n                className=\"m-4\"\r\n                disabled={isPaletteFull}\r\n                variant=\"contained\"\r\n                color={isPaletteFull ? \"default\" : \"primary\"}\r\n                onClick={randomColor}\r\n              >\r\n                Random color\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"NewPaletteForm-drawer-main\">\r\n            <ChromePicker color={color} onChange={handleChangeColor} />\r\n            <ValidatorForm onSubmit={handleAddColor} className=\"mt-8\">\r\n              <TextValidator\r\n                className=\"mw mb-8\"\r\n                value={colorName}\r\n                onChange={handleNameChange}\r\n                validators={[\"required\", \"isUnique\"]}\r\n                errorMessages={[\"A name is required\", \"Name should be unique\"]}\r\n              />\r\n              <Button\r\n                className=\"mw\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: isPaletteFull ? \"crimson\" : color,\r\n                  color: isPaletteFull ? \"aliceblue\" : \"black\",\r\n                }}\r\n                disabled={isPaletteFull}\r\n              >\r\n                {isPaletteFull ? \"Palette full\" : \"Add color\"}\r\n              </Button>\r\n            </ValidatorForm>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { arrayMove } from \"react-sortable-hoc\";\r\n\r\nimport DraggableColorList from \"./DraggableColorList\";\r\nimport NewPaletteNav from \"./NewPaletteNav\";\r\nimport NewPaletteDrawer from \"./NewPaletteDrawer\";\r\nimport useStyles from \"./NewPaletteFormStyles\";\r\nimport \"./NewPaletteForm.css\";\r\n\r\nexport default function NewPaletteForm(props) {\r\n  const classes = useStyles();\r\n\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setIsDrawerOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  const [color, setColor] = useState(\"#fffff\");\r\n  const handleChangeColor = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n  const [colors, setColors] = useState(props.defaultPalette.colors);\r\n  const handleAddColor = () => {\r\n    const newColor = {\r\n      color,\r\n      name: newName,\r\n    };\r\n    setColors([...colors, newColor]);\r\n    setNewName(\"\");\r\n  };\r\n\r\n  const [newName, setNewName] = useState(\"\");\r\n  const handleNameChange = (event) => setNewName(event.target.value);\r\n\r\n  const [paletteName, setPaletteName] = useState(\"\");\r\n  const handlePaletteNameChange = (event) => setPaletteName(event.target.value);\r\n\r\n  const savePalette = (emoji) => {\r\n    const toId = (stringName) => stringName.toLowerCase().replace(/ /g, \"-\");\r\n    const newPalette = {\r\n      paletteName,\r\n      colors,\r\n      id: toId(paletteName),\r\n      emoji,\r\n    };\r\n    props.savePalette(newPalette);\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const deleteColor = (colorName) => {\r\n    const newColors = colors.filter((color) => color.name !== colorName);\r\n    setColors(newColors);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setColors(arrayMove(colors, oldIndex, newIndex));\r\n  };\r\n\r\n  const randomColor = () => {\r\n    const color = Math.floor(Math.random() * 16777215).toString(16);\r\n    setColor(`#${color}`);\r\n  };\r\n  const clearPalette = () => setColors([]);\r\n\r\n  const isPaletteFull = colors.length >= 20;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NewPaletteNav\r\n        isDrawerOpen={isDrawerOpen}\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        handleSavePalette={savePalette}\r\n        paletteName={paletteName}\r\n        handlePaletteNameChange={handlePaletteNameChange}\r\n        colors={colors}\r\n        itExists={props.itExists}\r\n      />\r\n      <NewPaletteDrawer\r\n        isDrawerOpen={isDrawerOpen}\r\n        handleDrawerClose={handleDrawerClose}\r\n        isPaletteFull={isPaletteFull}\r\n        randomColor={randomColor}\r\n        color={color}\r\n        handleChangeColor={handleChangeColor}\r\n        handleAddColor={handleAddColor}\r\n        colorName={newName}\r\n        handleNameChange={handleNameChange}\r\n        handleClearPalette={clearPalette}\r\n      />\r\n\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <DraggableColorList\r\n          className=\"NewPaletteForm-box\"\r\n          deleteColor={deleteColor}\r\n          colors={colors}\r\n          axis={\"xy\"}\r\n          onSortEnd={onSortEnd}\r\n          distance={2}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default [\r\n  {\r\n    paletteName: \"Material UI Colors\",\r\n    id: \"material-ui-colors\",\r\n    emoji: \"🎨\",\r\n    colors: [\r\n      { name: \"red\", color: \"#F44336\" },\r\n      { name: \"pink\", color: \"#E91E63\" },\r\n      { name: \"purple\", color: \"#9C27B0\" },\r\n      { name: \"deeppurple\", color: \"#673AB7\" },\r\n      { name: \"indigo\", color: \"#3F51B5\" },\r\n      { name: \"blue\", color: \"#2196F3\" },\r\n      { name: \"lightblue\", color: \"#03A9F4\" },\r\n      { name: \"cyan\", color: \"#00BCD4\" },\r\n      { name: \"teal\", color: \"#009688\" },\r\n      { name: \"green\", color: \"#4CAF50\" },\r\n      { name: \"lightgreen\", color: \"#8BC34A\" },\r\n      { name: \"lime\", color: \"#CDDC39\" },\r\n      { name: \"yellow\", color: \"#FFEB3B\" },\r\n      { name: \"amber\", color: \"#FFC107\" },\r\n      { name: \"orange\", color: \"#FF9800\" },\r\n      { name: \"deeporange\", color: \"#FF5722\" },\r\n      { name: \"brown\", color: \"#795548\" },\r\n      { name: \"grey\", color: \"#9E9E9E\" },\r\n      { name: \"bluegrey\", color: \"#607D8B\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors v1\",\r\n    id: \"flat-ui-colors-v1\",\r\n    emoji: \"🤙\",\r\n    colors: [\r\n      { name: \"Turquoise\", color: \"#1abc9c\" },\r\n      { name: \"Emerald\", color: \"#2ecc71\" },\r\n      { name: \"PeterRiver\", color: \"#3498db\" },\r\n      { name: \"Amethyst\", color: \"#9b59b6\" },\r\n      { name: \"WetAsphalt\", color: \"#34495e\" },\r\n      { name: \"GreenSea\", color: \"#16a085\" },\r\n      { name: \"Nephritis\", color: \"#27ae60\" },\r\n      { name: \"BelizeHole\", color: \"#2980b9\" },\r\n      { name: \"Wisteria\", color: \"#8e44ad\" },\r\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n      { name: \"SunFlower\", color: \"#f1c40f\" },\r\n      { name: \"Carrot\", color: \"#e67e22\" },\r\n      { name: \"Alizarin\", color: \"#e74c3c\" },\r\n      { name: \"Clouds\", color: \"#ecf0f1\" },\r\n      { name: \"Concrete\", color: \"#95a5a6\" },\r\n      { name: \"Orange\", color: \"#f39c12\" },\r\n      { name: \"Pumpkin\", color: \"#d35400\" },\r\n      { name: \"Pomegranate\", color: \"#c0392b\" },\r\n      { name: \"Silver\", color: \"#bdc3c7\" },\r\n      { name: \"Asbestos\", color: \"#7f8c8d\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Dutch\",\r\n    id: \"flat-ui-colors-dutch\",\r\n    emoji: \"🇳🇱\",\r\n    colors: [\r\n      { name: \"Sunflower\", color: \"#FFC312\" },\r\n      { name: \"Energos\", color: \"#C4E538\" },\r\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n      { name: \"BaraRose\", color: \"#ED4C67\" },\r\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n      { name: \"LavenderTea\", color: \"#D980FA\" },\r\n      { name: \"VerryBerry\", color: \"#B53471\" },\r\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n      { name: \"PixelatedGrass\", color: \"#009432\" },\r\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n      { name: \"HollyHock\", color: \"#833471\" },\r\n      { name: \"RedPigment\", color: \"#EA2027\" },\r\n      { name: \"TurkishAqua\", color: \"#006266\" },\r\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n      { name: \"MagentaPurple\", color: \"#6F1E51\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors American\",\r\n    id: \"flat-ui-colors-american\",\r\n    emoji: \"🇺🇸\",\r\n    colors: [\r\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n      { name: \"FadedPoster\", color: \"#81ecec\" },\r\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n      { name: \"CityLights\", color: \"#dfe6e9\" },\r\n      { name: \"MintLeaf\", color: \"#00b894\" },\r\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n      { name: \"FirstDate\", color: \"#fab1a0\" },\r\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n      { name: \"AmericanRiver\", color: \"#636e72\" },\r\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n      { name: \"OrangeVille\", color: \"#e17055\" },\r\n      { name: \"Chi-Gong\", color: \"#d63031\" },\r\n      { name: \"PrunusAvium\", color: \"#e84393\" },\r\n      { name: \"DraculaOrchid\", color: \"#2d3436\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Aussie\",\r\n    id: \"flat-ui-colors-aussie\",\r\n    emoji: \"🇦🇺\",\r\n    colors: [\r\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n      { name: \"JuneBud\", color: \"#badc58\" },\r\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n      { name: \"Turbo\", color: \"#f9ca24\" },\r\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n      { name: \"PureApple\", color: \"#6ab04c\" },\r\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n      { name: \"Heliotrope\", color: \"#e056fd\" },\r\n      { name: \"ExodusFruit\", color: \"#686de0\" },\r\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n      { name: \"SteelPink\", color: \"#be2edd\" },\r\n      { name: \"Blurple\", color: \"#4834d4\" },\r\n      { name: \"DeepCove\", color: \"#130f40\" },\r\n      { name: \"WizardGrey\", color: \"#535c68\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors British\",\r\n    id: \"flat-ui-colors-british\",\r\n    emoji: \"🇬🇧\",\r\n    colors: [\r\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n      { name: \"Seabrook\", color: \"#487eb0\" },\r\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n      { name: \"Naval\", color: \"#40739e\" },\r\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n      { name: \"MazarineBlue\", color: \"#273c75\" },\r\n      { name: \"BlueNights\", color: \"#353b48\" },\r\n      { name: \"HarleyOrange\", color: \"#c23616\" },\r\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n      { name: \"ChainGangGrey\", color: \"#718093\" },\r\n      { name: \"PicoVoid\", color: \"#192a56\" },\r\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Spanish\",\r\n    id: \"flat-ui-colors-spanish\",\r\n    emoji: \"🇪🇸\",\r\n    colors: [\r\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n      { name: \"C64Purple\", color: \"#706fd3\" },\r\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n      { name: \"SummerSky\", color: \"#34ace0\" },\r\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n      { name: \"Liberty\", color: \"#474787\" },\r\n      { name: \"HotStone\", color: \"#aaa69d\" },\r\n      { name: \"DevilBlue\", color: \"#227093\" },\r\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n      { name: \"ChileanFire\", color: \"#cd6133\" },\r\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n      { name: \"Desert\", color: \"#ccae62\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Indian\",\r\n    id: \"flat-ui-colors-indian\",\r\n    emoji: \"🇮🇳\",\r\n    colors: [\r\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n      { name: \"RichGardenia\", color: \"#F97F51\" },\r\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n      { name: \"Keppel\", color: \"#58B19F\" },\r\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n      { name: \"BlueBell\", color: \"#3B3B98\" },\r\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n      { name: \"OasisStream\", color: \"#9AECDB\" },\r\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n      { name: \"PineGlade\", color: \"#BDC581\" },\r\n      { name: \"HighlighterLavender\", color: \"#82589F\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors French\",\r\n    id: \"flat-ui-colors-french\",\r\n    emoji: \"🇫🇷\",\r\n    colors: [\r\n      { name: \"FlatFlesh\", color: \"#fad390\" },\r\n      { name: \"MelonMelody\", color: \"#f8c291\" },\r\n      { name: \"Livid\", color: \"#6a89cc\" },\r\n      { name: \"Spray\", color: \"#82ccdd\" },\r\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n      { name: \"MandarinRed\", color: \"#e55039\" },\r\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n      { name: \"Dupain\", color: \"#60a3bc\" },\r\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n      { name: \"Waterfall\", color: \"#38ada9\" },\r\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n      { name: \"JalapenoRed\", color: \"#b71540\" },\r\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n      { name: \"ReefEncounter\", color: \"#079992\" },\r\n    ],\r\n  },\r\n];\r\n","import chroma from \"chroma-js\";\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette) {\r\n  let newPalette = {\r\n    paletteName: starterPalette.paletteName,\r\n    id: starterPalette.id,\r\n    emoji: starterPalette.emoji,\r\n    colors: {},\r\n  };\r\n  for (let level of levels) {\r\n    newPalette.colors[level] = [];\r\n  }\r\n  for (let color of starterPalette.colors) {\r\n    let scale = getScale(color.color, 10).reverse();\r\n    for (let i in scale) {\r\n      newPalette.colors[levels[i]].push({\r\n        name: `${color.name} ${levels[i]}`,\r\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n        hex: scale[i],\r\n        rgb: chroma(scale[i]).css(),\r\n        rgba: chroma(scale[i])\r\n          .css()\r\n          .replace(\"rgb\", \"rgba\")\r\n          .replace(\")\", \",1.0)\"),\r\n      });\r\n    }\r\n  }\r\n  return newPalette;\r\n}\r\nfunction getRange(hexColor) {\r\n  const end = \"#fff\";\r\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\r\n}\r\n\r\nfunction getScale(hexColor, numberOfColors) {\r\n  return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\r\n}\r\n\r\nexport { generatePalette };\r\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Palette from \"./components/Palette\";\nimport PaletteList from \"./components/PaletteList\";\nimport SingleColorPalette from \"./components/SingleColorPalette\";\nimport NewPaletteForm from \"./components/NewPaletteForm\";\nimport seedColors from \"./seedColors\";\nimport { generatePalette } from \"./colorHelpers\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n  const [palettes, setPalettes] = useState(savedPalettes || seedColors);\n\n  const findPalette = (id) => {\n    const palette = palettes.find((palette) => {\n      return palette.id === id;\n    });\n    return palette;\n  };\n\n  const savePalette = (newPalette) => {\n    setPalettes([...palettes, newPalette]);\n  };\n\n  const itExists = (paletteId) => {\n    return palettes.some((palette) => palette.id === paletteId);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem(\"palettes\", JSON.stringify(palettes));\n  });\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={(props) => (\n          <PaletteList\n            {...props}\n            palettes={palettes}\n            updatePalettes={setPalettes}\n          />\n        )}\n      />\n      <Route\n        exact\n        path=\"/palette/new\"\n        render={(props) => (\n          <NewPaletteForm\n            itExists={itExists}\n            savePalette={savePalette}\n            {...props}\n            defaultPalette={palettes[0]}\n          />\n        )}\n      />\n      <Route\n        exact\n        path=\"/palette/:id\"\n        render={(props) => {\n          const palette = generatePalette(findPalette(props.match.params.id));\n          return <Palette palette={palette} />;\n        }}\n      />\n      <Route\n        exact\n        path=\"/palette/:paletteId/:colorId\"\n        render={(props) => {\n          const palette = generatePalette(\n            findPalette(props.match.params.paletteId)\n          );\n          return (\n            <SingleColorPalette\n              palette={palette}\n              colorId={props.match.params.colorId}\n            />\n          );\n        }}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}